{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/start-app.js","dummy/tests/integration/components/aria-switch-test.js","dummy/tests/test-helper.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"dummy/tests/helpers/destroy-app\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = destroyApp;\n\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define(\"dummy/tests/helpers/module-for-acceptance\", [\"exports\", \"qunit\", \"dummy/tests/helpers/start-app\", \"dummy/tests/helpers/destroy-app\"], function (_exports, _qunit, _startApp, _destroyApp) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = _default;\n\n  function _default(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Ember.RSVP.resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  }\n});","define(\"dummy/tests/helpers/resolver\", [\"exports\", \"dummy/resolver\", \"dummy/config/environment\"], function (_exports, _resolver, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n  var _default = resolver;\n  _exports.default = _default;\n});","define(\"dummy/tests/helpers/start-app\", [\"exports\", \"dummy/app\", \"dummy/config/environment\"], function (_exports, _app, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = startApp;\n\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define(\"dummy/tests/integration/components/aria-switch-test\", [\"@ember/test-helpers\", \"qunit\", \"ember-qunit\"], function (_testHelpers, _qunit, _emberQunit) {\n  \"use strict\";\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  (0, _qunit.module)('Integration | Component | aria switch', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render a button element', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch/>\n                */\n                {\n                  \"id\": \"NYZWbKmD\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal(this.element.querySelectorAll('button').length, 1);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should render two toggle elements', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(assert) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch/>\n                */\n                {\n                  \"id\": \"NYZWbKmD\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.findAll)('span').length, 2);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have a type attribute set to button ', /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(assert) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch/>\n                */\n                {\n                  \"id\": \"NYZWbKmD\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.find)('button').getAttribute('type'), \"button\");\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have a role attribute set to switch ', /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(assert) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch/>\n                */\n                {\n                  \"id\": \"NYZWbKmD\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.find)('button').getAttribute('role'), \"switch\");\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have a data-action attribute set to aria-switch ', /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(assert) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch/>\n                */\n                {\n                  \"id\": \"NYZWbKmD\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.find)('button').getAttribute('data-action'), \"aria-switch\");\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have a default aria-checked state as false ', /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(assert) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch/>\n                */\n                {\n                  \"id\": \"NYZWbKmD\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.find)('button').getAttribute('aria-checked'), \"false\");\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have a default aria-checked state as given ', /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(assert) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch @checked=true/>\n                */\n                {\n                  \"id\": \"VakHgr/S\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\"],[\\\"true\\\"]],null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.find)('button').getAttribute('aria-checked'), \"true\");\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should toggle the aria-checked ', /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(assert) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch/>\n                */\n                {\n                  \"id\": \"NYZWbKmD\",\n                  \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.find)('button').getAttribute('aria-checked'), \"false\");\n                _context8.next = 5;\n                return (0, _testHelpers.click)('button');\n\n              case 5:\n                assert.equal((0, _testHelpers.find)('button').getAttribute('aria-checked'), \"true\");\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have a disabled state if specified ', /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(assert) {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch @disabled={{true}}/>\n                */\n                {\n                  \"id\": \"wbEGZt8V\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@disabled\\\"],[true]],null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.find)('button').disabled, true);\n                assert.equal((0, _testHelpers.find)('button').getAttribute('data-keep-disabled'), \"\");\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x9) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have an aria-label ', /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(assert) {\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch @label=\"My Aria Label\"/>\n                */\n                {\n                  \"id\": \"FNDjPUMg\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"My Aria Label\\\"]],null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.find)('button').getAttribute('aria-label'), \"My Aria Label\");\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function (_x10) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have an ON label as given ', /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(assert) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch @onLabel=\"Yes\"/>\n                */\n                {\n                  \"id\": \"xYM8wGHw\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onLabel\\\"],[\\\"Yes\\\"]],null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.findAll)('span')['0'].textContent.trim(), \"Yes\");\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x11) {\n        return _ref12.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should have an OFF label as given ', /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(assert) {\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch @offLabel=\"No\"/>\n                */\n                {\n                  \"id\": \"uuIrmEmI\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@offLabel\\\"],[\\\"No\\\"]],null]],[],false,[\\\"aria-switch\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 2:\n                assert.equal((0, _testHelpers.findAll)('span')['1'].textContent.trim(), \"No\");\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      return function (_x12) {\n        return _ref13.apply(this, arguments);\n      };\n    }());\n    (0, _qunit.test)('it should invoke the onToggle callback once clicked', /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(assert) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this.set('result', '');\n                this.set('toggleCallback', function (toggleValue) {\n                  var value = toggleValue ? \"ON\" : \"OFF\";\n\n                  _this.set('result', value);\n                });\n                _context13.next = 4;\n                return (0, _testHelpers.render)(Ember.HTMLBars.template(\n                /*\n                  <AriaSwitch @onToggle={{this.toggleCallback}}/>\n                                  <div id=\"result\">{{result}}</div>\n                */\n                {\n                  \"id\": \"65P6bZWx\",\n                  \"block\": \"[[[8,[39,0],null,[[\\\"@onToggle\\\"],[[30,0,[\\\"toggleCallback\\\"]]]],null],[1,\\\"\\\\n                  \\\"],[10,0],[14,1,\\\"result\\\"],[12],[1,[34,1]],[13]],[],false,[\\\"aria-switch\\\",\\\"result\\\"]]\",\n                  \"moduleName\": \"(unknown template module)\",\n                  \"isStrictMode\": false\n                }));\n\n              case 4:\n                _context13.next = 6;\n                return (0, _testHelpers.click)('button');\n\n              case 6:\n                assert.equal((0, _testHelpers.find)('#result').textContent.trim(), \"ON\");\n                _context13.next = 9;\n                return (0, _testHelpers.click)('button');\n\n              case 9:\n                assert.equal((0, _testHelpers.find)('#result').textContent.trim(), \"OFF\");\n\n              case 10:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      return function (_x13) {\n        return _ref14.apply(this, arguments);\n      };\n    }());\n  });\n});","define(\"dummy/tests/test-helper\", [\"dummy/app\", \"dummy/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACncA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}