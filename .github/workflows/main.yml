name: Build and Deploy
on:
  push:
    branches:
      - master
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1
    - name: Get Yarn cache path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Yarn cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.NODE_VERSION }}-

    - name: Install
      run: yarn install --frozen-lockfile
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: ESLint
      run: yarn lint:js
    - name: Templates
      run: yarn lint:hbs

  coverage:
    name: Coverage
    needs: [lint]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:

    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1
    
    - name: yarn install
      run: yarn install --frozen-lockfile
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: run coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{secrets.COVERALLS_REPO_TOKEN}}
      run: |
        yarn test:ember
        yarn coveralls
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  tests_ember_compat:
    name: Ember Compatability
    needs: [lint]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        scenario:
        - "ember-lts-3.16"
        - "ember-release"
        - "ember-beta"
    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1
    - name: Install
      run: yarn install --frozen-lockfile
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: Test with ${{ matrix.scenario }}
      run: yarn test:try-one ${{ matrix.scenario }}

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [lint]
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Volta setup
      uses: rwjblue/setup-volta@v1
    - name: Install
      run: yarn install --frozen-lockfile
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: Build
      run: yarn build
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: dist

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: yarn semantic-release

